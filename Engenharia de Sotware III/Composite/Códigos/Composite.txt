import java.util.ArrayList;
import java.util.List;

// Component (Componente)
interface MetodoPagamento {
    void realizarPagamento(double valor);
}

// Leaf (Folha)
class CartaoCredito implements MetodoPagamento {
    @Override
    public void realizarPagamento(double valor) {
        System.out.println("Pagamento com cartão de crédito no valor de R$" + valor);
    }
}

// Leaf (Folha)
class CartaoDebito implements MetodoPagamento {
    @Override
    public void realizarPagamento(double valor) {
        System.out.println("Pagamento com cartão de débito no valor de R$" + valor);
    }
}

// Leaf (Folha)
class Dinheiro implements MetodoPagamento {
    @Override
    public void realizarPagamento(double valor) {
        System.out.println("Pagamento em dinheiro no valor de R$" + valor);
    }
}

// Composite (Composto)
class PagamentoComposto implements MetodoPagamento {
    private List<MetodoPagamento> metodos = new ArrayList<>();

    public void adicionarMetodo(MetodoPagamento metodo) {
        metodos.add(metodo);
    }

    @Override
    public void realizarPagamento(double valor) {
        System.out.println("Pagamento composto:");
        for (MetodoPagamento metodo : metodos) {
            metodo.realizarPagamento(valor);
        }
    }
}

// Main
public class Main {
    public static void main(String[] args) {
        CartaoCredito cartaoCredito = new CartaoCredito();
        CartaoDebito cartaoDebito = new CartaoDebito();
        Dinheiro dinheiro = new Dinheiro();

        PagamentoComposto pagamentoComposto = new PagamentoComposto();
        pagamentoComposto.adicionarMetodo(cartaoCredito);
        pagamentoComposto.adicionarMetodo(cartaoDebito);
        pagamentoComposto.adicionarMetodo(dinheiro);

        pagamentoComposto.realizarPagamento(100.0);
    }
}
